{"version":3,"sources":["webpack:///./src/pages/archive.js","webpack:///./node_modules/core-js/modules/es6.function.name.js"],"names":["__webpack_require__","r","__webpack_exports__","d","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby__WEBPACK_IMPORTED_MODULE_1__","_components_layout__WEBPACK_IMPORTED_MODULE_4__","_components_seo__WEBPACK_IMPORTED_MODULE_5__","_components_sidebar_Sidebar__WEBPACK_IMPORTED_MODULE_6__","_components_tags_TechTag__WEBPACK_IMPORTED_MODULE_7__","ArchivePage","_ref","data","posts","allMarkdownRemark","edges","labels","site","siteMetadata","a","createElement","title","keywords","className","map","post","tags","node","frontmatter","key","id","to","fields","slug","date","excerpt","techTags","forEach","tag","i","push","getTechTags0","getTechTags","dP","f","FProto","Function","prototype","nameRE","configurable","get","this","match","e"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,8BAAAE,IAAA,IAAAC,EAAAL,EAAA,GAAAM,EAAAN,EAAAO,EAAAF,GAAAG,EAAAR,EAAA,KAAAS,GAAAT,EAAA,KAAAA,EAAA,KAAAA,EAAA,MAAAU,EAAAV,EAAA,KAAAW,EAAAX,EAAA,KAAAY,EAAAZ,EAAA,KA+DaI,EAAS,WAwCPS,UA7FK,SAAAC,GAAc,IAAXC,EAAWD,EAAXC,KACbC,EAAQD,EAAKE,kBAAkBC,MAC/BC,EAASJ,EAAKK,KAAKC,aAAaF,OAWtC,OACIb,EAAAgB,EAAAC,cAACd,EAAA,EAAD,KACIH,EAAAgB,EAAAC,cAACb,EAAA,EAAD,CAAKc,MAAM,UAAUC,SAAU,qEAC/BnB,EAAAgB,EAAAC,cAAA,OAAKG,UAAU,cACXpB,EAAAgB,EAAAC,cAAA,OAAKG,UAAU,qBACXpB,EAAAgB,EAAAC,cAACZ,EAAA,EAAD,OAEJL,EAAAgB,EAAAC,cAAA,OAAKG,UAAU,kBACXpB,EAAAgB,EAAAC,cAAA,MAAIG,UAAU,gBAAd,aACCV,EAAMW,IAAI,SAACC,GACR,IAAMC,EAAOD,EAAKE,KAAKC,YAAYF,KACnC,OACIvB,EAAAgB,EAAAC,cAAA,OAAKS,IAAKJ,EAAKE,KAAKG,GAAIP,UAAU,kBAC9BpB,EAAAgB,EAAAC,cAACf,EAAA,EAAD,CACI0B,GAAIN,EAAKE,KAAKK,OAAOC,KACrBV,UAAU,aAEVpB,EAAAgB,EAAAC,cAAA,MAAIG,UAAU,SAASE,EAAKE,KAAKC,YAAYP,QAEjDlB,EAAAgB,EAAAC,cAAA,SAAOG,UAAU,qBAAoBpB,EAAAgB,EAAAC,cAAA,sBAAcK,EAAKE,KAAKC,YAAYM,OAEzE/B,EAAAgB,EAAAC,cAAA,KAAGG,UAAU,iBAAiBE,EAAKE,KAAKQ,SACxChC,EAAAgB,EAAAC,cAACf,EAAA,EAAD,CACI0B,GAAIN,EAAKE,KAAKK,OAAOC,KACrBV,UAAU,gBAEVpB,EAAAgB,EAAAC,cAAA,SAAOG,UAAU,uBAAjB,oBAEJpB,EAAAgB,EAAAC,cAAA,OAAKG,UAAU,WArCvB,SAACG,GACnB,IAAMU,EAAW,GAIjB,OAHAV,EAAKW,QAAQ,SAACC,EAAKC,GACfH,EAASI,KAAKC,YAAaH,EAAKtB,EAAQuB,MAErCH,EAiCwBM,CAAYhB,gCCpDjD,IAAAiB,EAAS9C,EAAQ,IAAc+C,EAC/BC,EAAAC,SAAAC,UACAC,EAAA,wBACA,SAGAH,GAAkBhD,EAAQ,KAAgB8C,EAAAE,EAH1C,OAG0C,CAC1CI,cAAA,EACAC,IAAA,WACA,IACA,UAAAC,MAAAC,MAAAJ,GAAA,GACK,MAAAK,GACL","file":"component---src-pages-archive-js-ab9075a934925cfd15ab.js","sourcesContent":["import React from \"react\"\r\nimport { Link, graphql } from \"gatsby\"\r\nimport \"bootstrap/dist/css/bootstrap.css\"\r\nimport \"./index.css\"\r\n\r\nimport Layout from \"../components/layout\"\r\nimport SEO from \"../components/seo\"\r\nimport Sidebar from \"../components/sidebar/Sidebar\"\r\nimport {getTechTags0, TechTag} from \"../components/tags/TechTag\"\r\n\r\nconst ArchivePage = ({ data }) => {\r\n    const posts = data.allMarkdownRemark.edges\r\n    const labels = data.site.siteMetadata.labels\r\n\r\n    const getTechTags = (tags) => {\r\n      const techTags = []\r\n      tags.forEach((tag, i) => {\r\n          techTags.push(getTechTags0(tag, labels, i))\r\n      })\r\n      return techTags\r\n  }\r\n\r\n\r\n    return (\r\n        <Layout>\r\n            <SEO title=\"Archive\" keywords={[`gatsby`, `javascript`, `react`, `web development`, `blog`, `graphql`]} />\r\n            <div className=\"index-main\">\r\n                <div className=\"sidebar px-4 py-2\">\r\n                    <Sidebar />\r\n                </div>\r\n                <div className=\"post-list-main\">\r\n                    <h2 className=\"heading mt-3\">All Posts</h2>\r\n                    {posts.map((post) => {\r\n                        const tags = post.node.frontmatter.tags\r\n                        return (\r\n                            <div key={post.node.id} className=\"container mt-5\">\r\n                                <Link\r\n                                    to={post.node.fields.slug}\r\n                                    className=\"text-dark\"\r\n                                >\r\n                                    <h2 className=\"title\">{post.node.frontmatter.title}</h2>\r\n                                </Link>\r\n                                <small className=\"d-block text-info\"><i>Posted on {post.node.frontmatter.date}</i>\r\n                                </small>\r\n                                <p className=\"mt-3 d-inline\">{post.node.excerpt}</p>\r\n                                <Link\r\n                                    to={post.node.fields.slug}\r\n                                    className=\"text-primary\"\r\n                                >\r\n                                    <small className=\"d-inline-block ml-3\"> Read full post</small>\r\n                                </Link>\r\n                                <div className=\"d-block\">\r\n                                    {getTechTags(tags)}\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport const pageQuery = graphql`\r\n         query ArchiveQuery {\r\n           site {\r\n             siteMetadata {\r\n               title \r\n               author\r\n               labels {\r\n                 tag\r\n                 tech \r\n                 name \r\n                 size \r\n                 color\r\n               } \r\n             }\r\n           }\r\n           allMarkdownRemark(\r\n             limit: 1000\r\n             sort: { fields: [frontmatter___date], order: DESC }\r\n             filter: { frontmatter: { published: { eq: true } } }\r\n           ) {\r\n             totalCount\r\n             edges {\r\n               node {\r\n                 excerpt(pruneLength: 200)\r\n                 html\r\n                 id\r\n                 frontmatter {\r\n                   title\r\n                   date(formatString: \"MMMM DD, YYYY\")\r\n                   tags\r\n                 }\r\n                 fields {\r\n                   slug\r\n                 }\r\n               }\r\n             }\r\n           }\r\n         }\r\n       `\r\n\r\nexport default ArchivePage\r\n\r\n","var dP = require('./_object-dp').f;\nvar FProto = Function.prototype;\nvar nameRE = /^\\s*function ([^ (]*)/;\nvar NAME = 'name';\n\n// 19.2.4.2 name\nNAME in FProto || require('./_descriptors') && dP(FProto, NAME, {\n  configurable: true,\n  get: function () {\n    try {\n      return ('' + this).match(nameRE)[1];\n    } catch (e) {\n      return '';\n    }\n  }\n});\n"],"sourceRoot":""}