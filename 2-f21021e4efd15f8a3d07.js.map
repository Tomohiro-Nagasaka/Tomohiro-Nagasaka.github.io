{"version":3,"sources":["webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/seo.js","webpack:///./src/components/header/MobileSocialLinks.js","webpack:///./src/components/header/MobilePageLinks.js","webpack:///./src/components/header/SocialLinks.js","webpack:///./src/components/header/MobileBio.js","webpack:///./src/components/header/header.js","webpack:///./src/components/layout.js","webpack:///./src/components/tags/TechTag.js","webpack:///./src/components/sidebar/Bio.js","webpack:///./src/components/sidebar/SocialLinks.js","webpack:///./src/components/sidebar/TechTags.js","webpack:///./src/components/sidebar/Sidebar.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/images/willjw3.jpg","webpack:///./src/images/tomo.jpg"],"names":["__webpack_require__","d","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","a","StaticQueryContext","React","createContext","props","createElement","Consumer","staticQueryData","data","query","render","children","propTypes","PropTypes","object","string","isRequired","func","SEO","_ref","description","lang","meta","title","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps","arrayOf","MobileSocialLinks","contacts","react_default","className","href","linkedin","index_esm","size","style","color","github","MobilePages","gatsby_browser_entry","to","SocialLinks","MobileBio","src","willjw3","maxWidth","maxHeight","borderRadius","boxShadow","alt","Header","siteTitle","tagline","background","margin","padding","textDecoration","header_SocialLinks","header_MobileSocialLinks","MobilePageLinks","header_MobileBio","Layout","Fragment","header_header","paddingTop","Date","getFullYear","_2988051195","node","TechTag","tag","tech","gatsby__WEBPACK_IMPORTED_MODULE_3__","fontSize","role","viewBox","xmlns","width","height","fill","getTechTags0","labels","i","labelx","forEach","label","key","Bio","tomo","TechTags","posts","techtags","map","count","post","frontmatter","tags","includes","filter","category","posttags","push","techTags","getTechTags","Sidebar","sidebar_Bio","sidebar_SocialLinks","sidebar_TechTags","allMarkdownRemark","edges","_3543151044","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","p"],"mappings":"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","file":"2-f21021e4efd15f8a3d07.js","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","/**\r\n * SEO component that queries for data with\r\n *  Gatsby's useStaticQuery React hook\r\n *\r\n * See: https://www.gatsbyjs.org/docs/use-static-query/\r\n */\r\n\r\nimport React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport Helmet from \"react-helmet\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nfunction SEO({ description, lang, meta, title }) {\r\n  const { site } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n            author\r\n          }\r\n        }\r\n      }\r\n    `\r\n  )\r\n\r\n  const metaDescription = description || site.siteMetadata.description\r\n\r\n  return (\r\n    <Helmet\r\n      htmlAttributes={{\r\n        lang,\r\n      }}\r\n      title={title}\r\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\r\n      meta={[\r\n        {\r\n          name: `description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          property: `og:description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:type`,\r\n          content: `website`,\r\n        },\r\n        {\r\n          name: `twitter:card`,\r\n          content: `summary`,\r\n        },\r\n        {\r\n          name: `twitter:creator`,\r\n          content: site.siteMetadata.author,\r\n        },\r\n        {\r\n          name: `twitter:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          name: `twitter:description`,\r\n          content: metaDescription,\r\n        },\r\n      ].concat(meta)}\r\n    />\r\n  )\r\n}\r\n\r\nSEO.defaultProps = {\r\n  lang: `en`,\r\n  meta: [],\r\n  description: ``,\r\n}\r\n\r\nSEO.propTypes = {\r\n  description: PropTypes.string,\r\n  lang: PropTypes.string,\r\n  meta: PropTypes.arrayOf(PropTypes.object),\r\n  title: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default SEO\r\n","import React from \"react\";\r\nimport {\r\n    FaLinkedin,\r\n    FaGithubSquare,\r\n    FaStackOverflow,\r\n    FaFreeCodeCamp,\r\n    FaTwitterSquare\r\n} from \"react-icons/fa\"\r\n\r\nimport \"../layout.css\"\r\n\r\nconst MobileSocialLinks = ({ contacts }) => {\r\n    return (\r\n        <div className=\"bottom-bar py-1\">\r\n            <a className=\" text-primary\"\r\n                href={contacts.linkedin}>\r\n                <span title=\"Linked In\">\r\n                    <FaLinkedin size={26} style={{ color: \"primary\" }} />\r\n                </span>\r\n            </a>\r\n            <a className=\"text-light\"\r\n                href={contacts.github}>\r\n                <span title=\"GitHub\">\r\n                    <FaGithubSquare size={26} style={{ color: \"light\" }} />\r\n                </span>\r\n            </a>\r\n            {/* <a className=\"text-warning\"\r\n                href={contacts.stackoverflow}>\r\n                <span title=\"Stack Overflow\">\r\n                    <FaStackOverflow size={26} style={{ color: \"warning\" }} />\r\n                </span>\r\n            </a>\r\n            <a className=\"text-success\"\r\n                href={contacts.freecodecamp}>\r\n                <span title=\"freeCodeCamp\">\r\n                    <FaFreeCodeCamp size={26} style={{ color: \"success\" }} />\r\n                </span>\r\n            </a>\r\n            <a className=\"text-info\"\r\n                href={contacts.twitter}>\r\n                <span title=\"Twitter\">\r\n                    <FaTwitterSquare size={26} style={{ color: \"info\" }} />\r\n                </span>\r\n            </a> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MobileSocialLinks;","import React from \"react\"\r\nimport { Link } from \"gatsby\"\r\n\r\nconst MobilePages = () => {\r\n    return (\r\n        <div className=\"mobile-pages-main\">\r\n            <div className=\"text-center\">\r\n                <p className=\"d-inline p-4\"><Link to=\"/\"><span className=\"text-dark\">Blog Home</span></Link></p>\r\n                <p className=\"d-inline p-4\"><Link to=\"/about\"><span className=\"text-dark\">About</span></Link></p>\r\n                <p className=\"d-inline p-4\"><Link to=\"/archive\"><span className=\"text-dark\">Archive</span></Link></p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MobilePages\r\n\r\n\r\n","import React from \"react\"\r\nimport {\r\n    FaLinkedin,\r\n    FaGithubSquare,\r\n    FaStackOverflow,\r\n    FaFreeCodeCamp,\r\n    FaTwitterSquare\r\n} from \"react-icons/fa\"\r\n\r\n\r\nconst SocialLinks = ({ contacts }) => {\r\n    return (\r\n        <div className=\"social-links float-right mr-4\">\r\n            <a className=\"text-primary ml-4\"\r\n                href={contacts.linkedin}>\r\n                <span title=\"Linked In\">\r\n                    <FaLinkedin size={40} style={{ color: \"primary\" }} />\r\n                </span>\r\n            </a>\r\n            <a className=\"text-light ml-4\"\r\n                href={contacts.github}>\r\n                <span title=\"GitHub\">\r\n                    <FaGithubSquare size={40} style={{ color: \"light\" }} />\r\n                </span>\r\n            </a>\r\n            {/* <a className=\"text-warning ml-4\"\r\n                href={contacts.stackoverflow}>\r\n                <span title=\"Stack Overflow\">\r\n                    <FaStackOverflow size={40} style={{ color: \"warning\" }} />\r\n                </span>\r\n            </a>\r\n            <a className=\"text-success ml-4\"\r\n                href={contacts.freecodecamp}>\r\n                <span title=\"freeCodeCamp\">\r\n                    <FaFreeCodeCamp size={40} style={{ color: \"success\" }} />\r\n                </span>\r\n            </a>\r\n            <a className=\"text-info ml-4\"\r\n                href={contacts.twitter}>\r\n                <span title=\"Twitter\">\r\n                    <FaTwitterSquare size={40} style={{ color: \"info\" }} />\r\n                </span>\r\n            </a> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SocialLinks","import React from \"react\"\r\n\r\nimport \"./header.css\"\r\nimport willjw3 from \"../../images/willjw3.jpg\"\r\n\r\nconst MobileBio = (props) => {\r\n\r\n    return (\r\n        <div className=\"mobile-bio-main\">\r\n            <img src={willjw3}  className=\"ml-4 mt-2\" style={{ maxWidth: `75px`, maxHeight: `75px`, borderRadius: `50%`,boxShadow: `1px 1px 3px`}} alt=\"author-pic\" />\r\n            <h4 className=\"mr-4 mt-4\">{props.author}</h4>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MobileBio","import React from \"react\"\r\nimport { Link } from \"gatsby\"\r\nimport PropTypes from \"prop-types\"\r\n\r\n\r\nimport MobileSocialLinks from \"./MobileSocialLinks\"\r\nimport MobilePageLinks from \"./MobilePageLinks\"\r\nimport SocialLinks from \"./SocialLinks\"\r\nimport MobileBio from \"./MobileBio\"\r\nimport \"./header.css\"\r\n\r\nconst Header = ({ siteTitle, tagline, author, contacts }) => {\r\n\r\n  return (\r\n    <header\r\n      className=\"head-main\"\r\n      style={{\r\n        background: `black`\r\n      }}\r\n    >\r\n      <div className=\"head-elements\"\r\n        style={{\r\n          margin: `0`,\r\n          padding: `.75rem`\r\n        }}\r\n      >\r\n        <h1 className=\"head-logo ml-4\" style={{ margin: 0 }}>\r\n          <Link\r\n            to=\"/\"\r\n            style={{\r\n              color: `white`,\r\n              textDecoration: `none`,\r\n            }}\r\n          >\r\n            {siteTitle}\r\n          </Link>\r\n        </h1>\r\n        <SocialLinks contacts={contacts} />\r\n      </div>\r\n      <MobileSocialLinks contacts={contacts} />\r\n      <MobilePageLinks />\r\n      <MobileBio author={author} />\r\n    </header>\r\n  )\r\n}\r\n\r\nHeader.propTypes = {\r\n  siteTitle: PropTypes.string,\r\n}\r\n\r\nHeader.defaultProps = {\r\n  siteTitle: ``,\r\n}\r\n\r\nexport default Header\r\n","/**\r\n * Layout component that queries for data\r\n * with Gatsby's StaticQuery component\r\n *\r\n * See: https://www.gatsbyjs.org/docs/static-query/\r\n */\r\n\r\nimport React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { StaticQuery, graphql } from \"gatsby\"\r\nimport \"bootstrap/dist/css/bootstrap.css\"\r\nimport Header from \"./header/header\"\r\nimport \"./layout.css\"\r\n\r\nconst Layout = ({ children }) => {\r\n\r\n  return (\r\n    <StaticQuery\r\n      query={graphql`\r\n      query SiteTitleQuery {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            tagline\r\n            author\r\n            contacts {\r\n              linkedin\r\n              github\r\n              stackoverflow\r\n              freecodecamp\r\n              twitter\r\n            }\r\n          }\r\n        }\r\n      }\r\n    `}\r\n      render={data => (\r\n        <>\r\n          <Header\r\n            siteTitle={data.site.siteMetadata.title}\r\n            tagline={data.site.siteMetadata.tagline}\r\n            author={data.site.siteMetadata.author}\r\n            contacts={data.site.siteMetadata.contacts} />\r\n          <div\r\n            style={{\r\n              margin: `0 auto`,\r\n              padding: `0px 1.0875rem 1.45rem`,\r\n              paddingTop: 0,\r\n            }}\r\n          >\r\n            <main className=\"p-4\">{children}</main>\r\n            <footer className=\"text-center\">\r\n              <hr/>\r\n              <p className=\"d-inline\">© {new Date().getFullYear()} <a className=\"text-info\" href=\"https://tomohiro-nagasaka.github.io/\">Tomo</a>, All Rights Reserved.</p>\r\n              <p className=\"mt-5 text-muted d-inline\"><i> Built with\r\n                            {` `}\r\n                <a className=\"text-info\" href=\"https://www.gatsbyjs.org\">Gatsby</a></i>\r\n              </p>\r\n            </footer>\r\n          </div>\r\n        </>\r\n      )}\r\n    />\r\n  )\r\n}\r\n\r\nLayout.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n}\r\n\r\nexport default Layout\r\n","import React from \"react\"\r\n\r\nimport \"./tags.css\"\r\nimport { Link } from \"gatsby\";\r\n\r\nexport const TechTag = (props) => {\r\n    const { tag, tech, name, size, color } = props\r\n\r\n    return (\r\n        <div className=\"d-inline-block p-1\">\r\n            <Link to={`/tags/${tag}/`}>\r\n                <button\r\n                    className=\"tech-tag text-white\">\r\n                    <p className=\"d-inline\">{tech} </p>\r\n                    <div className=\"d-inline\" style={{ fontSize: size, color: color }}><svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\" width={size * 1.5} height={size * 1.5} style={{fill: `${color}`}}>\r\n                            <title>{tech}</title>\r\n                            <path\r\n                                d={name} />\r\n                        </svg></div>\r\n                </button>\r\n            </Link>\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport const getTechTags0 = (tag, labels, i) => {\r\n    \r\n    let labelx = null;\r\n    labels.forEach((label) => {\r\n        \r\n        if (tag === label.tag) {\r\n\r\n            labelx = label;            \r\n        }\r\n    })\r\n\r\n    if(labelx == null)\r\n    {\r\n        //console.log(tag)\r\n        labelx = labels[0]\r\n        return <TechTag key={i} tag={tag} tech={tag} name={labelx.name} size={labelx.size} color={labelx.color} />\r\n    }\r\n    else{\r\n        return <TechTag key={i} tag={labelx.tag} tech={labelx.tech} name={labelx.name} size={labelx.size} color={labelx.color} />\r\n    }\r\n\r\n    \r\n}\r\n\r\nexport default TechTag","import React from \"react\"\r\nimport \"./sidebar.css\"\r\n\r\nimport tomo from \"../../images/tomo.jpg\"\r\n\r\nconst Bio = ({ author, tagline }) => {\r\n\r\n    return (\r\n        <div className=\"bio-main w-75\">\r\n            <img src={tomo} style={{ maxWidth: `100px` }} className=\"profile-img\" alt=\"\" />\r\n            <h3 className=\"mt-2 author-bio\">{author}</h3>\r\n            <small className=\"text-muted\">{tagline}</small>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Bio","import React from \"react\"\r\nimport {\r\n    FaLinkedin,\r\n    FaGithubSquare,\r\n    FaStackOverflow,\r\n    FaFreeCodeCamp,\r\n    FaTwitterSquare\r\n} from \"react-icons/fa\"\r\nimport \"./sidebar.css\"\r\n\r\n\r\nconst SocialLinks = ({ contacts }) => {\r\n    return (\r\n        <div className=\"side-social-links float-left mt-3 mb-3\">\r\n            <a className=\"text-secondary p-2\"\r\n                href={contacts.linkedin}>\r\n                <span title=\"Linked In\">\r\n                    <FaLinkedin size={26} style={{ color: \"secondary\" }} />\r\n                </span>\r\n            </a>\r\n            <a className=\"text-secondary p-2\"\r\n                href={contacts.github}>\r\n                <span title=\"GitHub\">\r\n                    <FaGithubSquare size={26} style={{ color: \"secondary\" }} />\r\n                </span>\r\n            </a>\r\n            {/* <a className=\"text-secondary p-2\"\r\n                href={contacts.stackoverflow}>\r\n                <span title=\"Stack Overflow\">\r\n                    <FaStackOverflow size={26} style={{ color: \"secondary\" }} />\r\n                </span>\r\n            </a>\r\n            <a className=\"text-secondary p-2\"\r\n                href={contacts.freecodecamp}>\r\n                <span title=\"freeCodeCamp\">\r\n                    <FaFreeCodeCamp size={26} style={{ color: \"secondary\" }} />\r\n                </span>\r\n            </a>\r\n            <a className=\"text-secondary p-2\"\r\n                href={contacts.twitter}>\r\n                <span title=\"Twitter\">\r\n                    <FaTwitterSquare size={26} style={{ color: \"secondary\" }} />\r\n                </span>\r\n            </a> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SocialLinks","import React from \"react\"\r\n\r\nimport {getTechTags0} from \"../tags/TechTag\"\r\n\r\n\r\nconst TechTags = (props) => {\r\n    const labels = props.labels\r\n    const posts = props.posts\r\n\r\n    const labelCount = labels.map(label => {\r\n        let count = 0;\r\n        posts.forEach(post => {\r\n            if (post.node.frontmatter.tags.includes(label.tag)) {\r\n                count = count + 1\r\n            }\r\n        })\r\n        return [label.tag, count]\r\n    })\r\n\r\n    const categories = labelCount.filter(label => {\r\n        return label[1] > 0\r\n    })\r\n\r\n    const techtags = categories.map(category => {\r\n        return category[0]\r\n    })\r\n\r\n    let posttags = []\r\n    posts.forEach(post => {\r\n        post.node.frontmatter.tags.forEach(tag => {\r\n            if (!posttags.includes(tag)) {\r\n                posttags.push(tag)\r\n            }\r\n        })\r\n    })\r\n\r\n    const getOtherTags = (tags) => {\r\n        const techTags = []\r\n        tags.forEach((tag, i) => {\r\n\r\n            if (!techtags.includes(tag)) {\r\n                techTags.push(getTechTags0(tag, labels, i))\r\n            }\r\n        })\r\n        return techTags\r\n    }\r\n\r\n    const getTechTags = (tags) => {\r\n        const techTags = []\r\n        tags.forEach((tag, i) => {\r\n            techTags.push(getTechTags0(tag, labels, i))\r\n        })\r\n        return techTags\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <h4>Topics/Language</h4>\r\n            <div className=\"d-block\">\r\n                {getOtherTags(posttags)}\r\n            </div>\r\n            <br></br>\r\n            <h4>Programming/Technology</h4>\r\n            <div className=\"d-block\">\r\n                {getTechTags(techtags)}\r\n            </div>\r\n            \r\n            \r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default TechTags","import React from \"react\"\r\nimport { StaticQuery, graphql, Link } from \"gatsby\"\r\nimport Bio from \"./Bio\"\r\nimport \"./sidebar.css\"\r\n\r\nimport SocialLinks from \"./SocialLinks\"\r\nimport TechTags from \"./TechTags\"\r\n\r\n\r\nconst Sidebar = () => {\r\n    return (\r\n        <StaticQuery\r\n            query={graphql`\r\n                query SiteBioQuery {\r\n                    site {\r\n                        siteMetadata {\r\n                            title\r\n                            tagline\r\n                            author\r\n                            contacts {\r\n                                linkedin\r\n                                github\r\n                                stackoverflow\r\n                                freecodecamp\r\n                                twitter\r\n                            }\r\n                            labels {\r\n                                tag\r\n                                tech\r\n                                name \r\n                                size \r\n                                color\r\n                            }\r\n                        }\r\n                    }\r\n                    allMarkdownRemark(\r\n                        limit: 999999\r\n                        sort: { fields: [frontmatter___date], order: DESC }\r\n                        filter: { frontmatter: { published: { eq: true } } }\r\n                    ) {\r\n                        edges {\r\n                            node {\r\n                                frontmatter {\r\n                                    tags\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            `}\r\n            render={data => (\r\n                <>\r\n                    <div className=\"sidebar-main border-right\">\r\n                        <Bio author={data.site.siteMetadata.author} tagline={data.site.siteMetadata.tagline} />\r\n                        <SocialLinks contacts={data.site.siteMetadata.contacts} />\r\n                        <div className=\"page-links\">\r\n                            <Link to=\"/\"><span className=\"text-dark d-block py-1\">Blog Home</span></Link>\r\n                            <Link to=\"/about\"><span className=\"text-dark d-block py-1\">About</span></Link>\r\n                            <Link to=\"/archive\"><span className=\"text-dark d-block py-1\">Archive</span></Link>\r\n                        </div>\r\n                        <div className=\"tech-tags mt-4\">\r\n                            <TechTags labels={data.site.siteMetadata.labels} posts={data.allMarkdownRemark.edges} />\r\n                        </div>\r\n                    </div>\r\n                </>\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\nexport default Sidebar","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","module.exports = __webpack_public_path__ + \"static/willjw3-2990bd8a0f935e5baa06d52d5f36d9d2.jpg\";","module.exports = __webpack_public_path__ + \"static/tomo-736f285522df99687661c42af6355660.jpg\";"],"sourceRoot":""}