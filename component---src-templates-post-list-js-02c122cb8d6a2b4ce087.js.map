{"version":3,"sources":["webpack:///./src/templates/post-list.js","webpack:///./node_modules/core-js/modules/es6.function.name.js","webpack:///./node_modules/core-js/modules/es6.regexp.to-string.js","webpack:///./node_modules/core-js/modules/es6.regexp.flags.js"],"names":["listQuery","PostList","props","posts","data","allMarkdownRemark","edges","labels","site","siteMetadata","_props$pageContext","pageContext","currentPage","isFirst","isLast","numPages","prevPage","toString","nextPage","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_6__","_components_seo__WEBPACK_IMPORTED_MODULE_7__","title","keywords","seokeywords","className","_components_sidebar_Sidebar__WEBPACK_IMPORTED_MODULE_8__","map","post","tags","node","frontmatter","key","id","gatsby__WEBPACK_IMPORTED_MODULE_3__","to","fields","slug","date","excerpt","techTags","forEach","tag","i","push","getTechTags0","getTechTags","rel","style","textDecoration","dP","__webpack_require__","f","FProto","Function","prototype","nameRE","configurable","get","this","match","e","anObject","$flags","DESCRIPTORS","$toString","define","fn","RegExp","call","source","flags","R","concat","undefined","name"],"mappings":"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","file":"component---src-templates-post-list-js-02c122cb8d6a2b4ce087.js","sourcesContent":["import React from \"react\"\r\nimport { Link, graphql } from \"gatsby\"\r\nimport \"bootstrap/dist/css/bootstrap.css\"\r\nimport \"../pages/index.css\"\r\n\r\nimport Layout from \"../components/layout\"\r\nimport SEO from \"../components/seo\"\r\nimport Sidebar from \"../components/sidebar/Sidebar\"\r\nimport {getTechTags0} from \"../components/tags/TechTag\"\r\n\r\nconst PostList = (props) => {\r\n    const posts = props.data.allMarkdownRemark.edges\r\n    const labels = props.data.site.siteMetadata.labels\r\n    const { currentPage, numPages } = props.pageContext\r\n    const isFirst = currentPage === 1\r\n    const isLast = currentPage === numPages\r\n    const prevPage = currentPage - 1 === 1 ? \"/\" : \"/\" + (currentPage - 1).toString()\r\n    const nextPage = \"/\" + (currentPage + 1).toString()\r\n\r\n    const getTechTags = (tags) => {\r\n        const techTags = []\r\n        tags.forEach((tag, i) => {\r\n            techTags.push(getTechTags0(tag, labels, i))\r\n        })\r\n        return techTags\r\n    }\r\n\r\n\r\n    return (\r\n        <Layout>\r\n            <SEO title=\"Home\" keywords={props.data.site.siteMetadata.seokeywords} />\r\n            <div className=\"index-main\">\r\n                <div className=\"sidebar px-4 py-2\">\r\n                    <Sidebar />\r\n                </div>\r\n                <div className=\"post-list-main\">\r\n                    {posts.map((post) => {\r\n                        const tags = post.node.frontmatter.tags\r\n                        return (\r\n                            <div key={post.node.id} className=\"container mt-5\">\r\n                                <Link\r\n                                    to={post.node.fields.slug}\r\n                                    className=\"text-dark\"\r\n                                >\r\n                                    <h2 className=\"title\">{post.node.frontmatter.title}</h2>\r\n                                </Link>\r\n                                <small className=\"d-block text-info\"><i>Posted on {post.node.frontmatter.date}</i>\r\n                                </small>\r\n                                <p className=\"mt-3 d-inline\">{post.node.excerpt}</p>\r\n                                <Link\r\n                                    to={post.node.fields.slug}\r\n                                    className=\"text-primary\"\r\n                                >\r\n                                    <small className=\"d-inline-block ml-3\"> Read full post</small>\r\n                                </Link>\r\n                                <div className=\"d-block\">\r\n                                    {getTechTags(tags)}\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    })}\r\n                    <div className=\"text-center mt-4\">\r\n                        {!isFirst && (\r\n                            <Link to={prevPage} rel=\"prev\" style={{ textDecoration: `none` }}>\r\n                                <span className=\"text-dark\">← Previous Page</span>\r\n                            </Link>\r\n                        )}\r\n                        {!isLast && (\r\n                            <Link to={nextPage} rel=\"next\" style={{ textDecoration: `none` }}>\r\n                                <span className=\"text-dark ml-5\">Next Page →</span>\r\n                            </Link>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Layout>\r\n    )\r\n}\r\n\r\n//filter: { frontmatter: { published: { eq: true } } }\r\nexport const listQuery = graphql`\r\n         query paginateQuery($skip: Int!, $limit: Int!) {\r\n           site {\r\n             siteMetadata {\r\n               title \r\n               author\r\n               labels {\r\n                 tag\r\n                 tech \r\n                 name \r\n                 size \r\n                 color\r\n               } \r\n             }\r\n           }\r\n           allMarkdownRemark(\r\n             limit: $limit\r\n             skip: $skip\r\n             sort: { fields: [frontmatter___date], order: DESC }\r\n             filter: { frontmatter: { tags: { nin: \"Featured\" } } }\r\n           ) {\r\n             totalCount\r\n             edges {\r\n               node {\r\n                 excerpt(pruneLength: 200)\r\n                 html\r\n                 id\r\n                 frontmatter {\r\n                   title\r\n                   date(formatString: \"MMMM DD, YYYY\")\r\n                   tags\r\n                 }\r\n                 fields {\r\n                   slug\r\n                 }\r\n               }\r\n             }\r\n           }\r\n         }\r\n       `\r\n\r\nexport default PostList\r\n","var dP = require('./_object-dp').f;\nvar FProto = Function.prototype;\nvar nameRE = /^\\s*function ([^ (]*)/;\nvar NAME = 'name';\n\n// 19.2.4.2 name\nNAME in FProto || require('./_descriptors') && dP(FProto, NAME, {\n  configurable: true,\n  get: function () {\n    try {\n      return ('' + this).match(nameRE)[1];\n    } catch (e) {\n      return '';\n    }\n  }\n});\n","'use strict';\nrequire('./es6.regexp.flags');\nvar anObject = require('./_an-object');\nvar $flags = require('./_flags');\nvar DESCRIPTORS = require('./_descriptors');\nvar TO_STRING = 'toString';\nvar $toString = /./[TO_STRING];\n\nvar define = function (fn) {\n  require('./_redefine')(RegExp.prototype, TO_STRING, fn, true);\n};\n\n// 21.2.5.14 RegExp.prototype.toString()\nif (require('./_fails')(function () { return $toString.call({ source: 'a', flags: 'b' }) != '/a/b'; })) {\n  define(function toString() {\n    var R = anObject(this);\n    return '/'.concat(R.source, '/',\n      'flags' in R ? R.flags : !DESCRIPTORS && R instanceof RegExp ? $flags.call(R) : undefined);\n  });\n// FF44- RegExp#toString has a wrong name\n} else if ($toString.name != TO_STRING) {\n  define(function toString() {\n    return $toString.call(this);\n  });\n}\n","// 21.2.5.3 get RegExp.prototype.flags()\nif (require('./_descriptors') && /./g.flags != 'g') require('./_object-dp').f(RegExp.prototype, 'flags', {\n  configurable: true,\n  get: require('./_flags')\n});\n"],"sourceRoot":""}